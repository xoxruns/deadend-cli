
from pydantic import BaseModel
from pydantic_ai import Tool

from .factory import AgentRunner
from core.models import AIModel


from src.prompts import render_agent_instructions, render_tool_description


class ExploitResponse(BaseModel):
    reasoning: str
    payload: str
    result: str


class ExploitAgent(AgentRunner):
    """
        
    """
    
    def __init__(self, name, model, instructions, deps_type, output_type, tools):
        super().__init__(name, model, instructions, deps_type, output_type, tools)
    

    async def run(self, user_prompt, deps, message_history, usage, usage_limits):
        return await super().run(user_prompt, deps, message_history, usage, usage_limits)